name: Continuous Integration
on: 
  push:
    paths-ignore:
      - README.md
  pull_request:
    paths-ignore:
      - README.md
  schedule:
    - cron: '0 0 * * 0'

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/python@master
      with:
        command: test
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      continue-on-error: true

    - run: docker build --target test -t app-tests .
    - run: docker run -e SECRET_KEY=${{ secrets.SECRET_KEY }} -e DATABASE_NAME=${{ secrets.DATABASE_NAME }} -e MONGO_CONNECTION_STRING=${{ secrets.MONGO_CONNECTION_STRING }} app-tests
    - run: docker run --entrypoint poetry app-tests run safety check

    - name: Send Slack Notification on Success
      if: success()
      uses: slackapi/slack-github-action@v1.27.0
      with:
        channel-id: ${{ secrets.SLACK_CHANNEL }}
        slack-message: |
          *Build Succeeded!* :white_check_mark:
          *Commit:* ${{ github.event.head_commit.message }}
          *Committer:* ${{ github.event.head_commit.committer.name }}
          *Branch:* ${{ github.ref_name }}
          *PR URL:* ${{ github.event.pull_request.url }}
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_SECRET }}

    - name: Send Slack Notification on Failure
      if: failure()
      uses: slackapi/slack-github-action@v1.27.0
      with:
        channel-id: ${{ secrets.SLACK_CHANNEL }}
        slack-message: |
          *Build Failed!* :x:
          *Commit:* ${{ github.event.head_commit.message }}
          *Committer:* ${{ github.event.head_commit.committer.name }}
          *Branch:* ${{ github.ref_name }}
          *PR URL:* ${{ github.event.pull_request.url }}
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_SECRET }}

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
    - uses: actions/checkout@v4

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build Docker image
      run: docker build --target production -t ${{ secrets.DOCKERHUB_USERNAME }}/todoapp:${{ github.sha }} -t ${{ secrets.DOCKERHUB_USERNAME }}/todoapp:latest .

    - name: Push Docker image with SHA tag
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/todoapp:${{ github.sha }}

    - name: Push Docker image with latest tag
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/todoapp:latest

    - name: Deploy latest image to Azure
      run: curl -dH -X POST '${{ secrets.AZURE_WEBHOOK }}'

    - name: Send Slack Notification on Success
      if: success()
      uses: slackapi/slack-github-action@v1.27.0
      with:
        channel-id: ${{ secrets.SLACK_CHANNEL }}
        slack-message: |
          *App successfully deployed!* :white_check_mark:
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_SECRET }}

    - name: Send Slack Notification on Failure
      if: failure()
      uses: slackapi/slack-github-action@v1.27.0
      with:
        channel-id: ${{ secrets.SLACK_CHANNEL }}
        slack-message: |
          *App failed to deploy* :x:
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_SECRET }}