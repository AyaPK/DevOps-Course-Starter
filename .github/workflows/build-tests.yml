name: Continuous Integration
on: 
  push:
    paths-ignore:
      - README.md
  pull_request:
    paths-ignore:
      - README.md
  schedule:
    - cron: '0 0 * * 0'

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/python@master
      with:
        command: test
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      continue-on-error: true

    - run: docker build --target test -t app-tests .
    - run: docker run -e SECRET_KEY=${{ secrets.SECRET_KEY }} -e TRELLO_API_KEY=${{ secrets.TRELLO_API_KEY }} -e TRELLO_API_TOKEN=${{ secrets.TRELLO_API_TOKEN }} -e TRELLO_BOARD_ID=${{ secrets.TRELLO_BOARD_ID }} -e TRELLO_DEFAULT_LIST_ID=${{ secrets.TRELLO_DEFAULT_LIST_ID }} app-tests

    - name: Send Slack Notification on Success
      if: success()
      uses: slackapi/slack-github-action@v1.27.0
      with:
        channel-id: ${{ secrets.SLACK_CHANNEL }}
        slack-message: |
          *Build Succeeded!* :white_check_mark:
          *Commit:* ${{ github.event.head_commit.message }}
          *Committer:* ${{ github.event.head_commit.committer.name }}
          *Branch:* ${{ github.ref_name }}
          *PR URL:* ${{ github.event.pull_request.html_url }}
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_SECRET }}

    - name: Send Slack Notification on Failure
      if: failure()
      uses: slackapi/slack-github-action@v1.27.0
      with:
        channel-id: ${{ secrets.SLACK_CHANNEL }}
        slack-message: |
          *Build Failed!* :x:
          *Commit:* ${{ github.event.head_commit.message }}
          *Committer:* ${{ github.event.head_commit.committer.name }}
          *Branch:* ${{ github.ref_name }}
          *PR URL:* ${{ github.event.pull_request.html_url }}
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_SECRET }}
